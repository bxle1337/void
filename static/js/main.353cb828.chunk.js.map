{"version":3,"sources":["img/mainbutton.png","panels/Home.js","img/persik.png","panels/Persik.js","App.js","index.js"],"names":["Home","number","titles","id","Score","go","fetchedUser","Fact","useState","Theme","setTheme","bridge","subscribe","detail","type","data","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","console","log","className","toFixed","weight","style","marginTop","vertical","marginBottom","display","size","stretched","mode","marginRight","color","Persik","props","left","onClick","src","persik","alt","wsConnection","WebSocket","App","activePanel","setActivePanel","setUser","popout","setPopout","setScore","setFact","useEffect","a","send","user","fetchData","e","currentTarget","dataset","to","JSON","stringify","event","params","window","location","search","onopen","message","registration","onmessage","json","parse","ReactDOM","render","getElementById"],"mappings":"wNAAe,I,MCmEAA,EAxDF,SAAC,GAA0C,IAanCC,EAAQC,EAbbC,EAAuC,EAAvCA,GAAqBC,GAAkB,EAAnCC,GAAmC,EAA/BC,YAA+B,EAAlBF,OAAOG,EAAW,EAAXA,KAC1C,EAA0BC,mBAAS,SAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAkBD,OAhBCC,IAAOC,WAAU,YAAgC,IAAD,IAA5BC,OAAUC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,KAClC,GAAa,yBAATD,EAAiC,CACnC,IAAME,EAAkBC,SAASC,gBAAgB,UACjDF,EAAgBG,MAAQJ,EAAKK,OAASL,EAAKK,OAAS,eACpDV,EAAyB,iBAAhBK,EAAKK,OAA4B,QAAU,SACpDH,SAASI,KAAKC,WAAWC,aAAaP,GACtCQ,QAAQC,IAAIV,OAWjB,cAAC,IAAD,CAAOZ,GAAIA,EAAX,SACC,sBAAKuB,UAAU,YAAf,UACA,cAAC,IAAD,yDACA,eAAC,IAAD,WACE,iCAAQ,sBAAKA,UAAU,YAAf,UACP,oBAAIA,UAAU,QAAQvB,GAAG,QAAzB,SAAkCC,EAAMuB,QAAQ,KAChD,cAAC,IAAD,CAASC,OAAO,UAAUC,MAAO,CAACC,WAAY,IAA9C,UAbgB7B,EAa8CG,EAbtCF,EAa6C,CAAC,6CAAW,6CAAW,wCAXtFA,EAASD,EAAO,IAAI,GAAKA,EAAO,IAAI,GAAK,EADpC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAC+BA,EAAO,GAAG,EAAGA,EAAO,GAAG,YAalF,cAAC,IAAD,UACE,iCAASM,SAGX,cAAC,IAAD,CAAawB,SAAS,SAASF,MAAO,CAACG,aAAc,IAArD,SACA,eAAC,IAAD,CAAKH,MAAO,CAACI,QAAS,QAAtB,UACG,cAAC,IAAD,CAAQC,KAAK,IAAIC,WAAS,EAACC,KAAK,YAAYP,MAAO,CAAEQ,YAAa,EAAGC,MAAiB,UAAV7B,EAAoB,QAAU,SAA1G,kCACA,cAAC,IAAD,CAAQyB,KAAK,IAAIC,WAAS,EAACC,KAAK,YAAYP,MAAO,CAAES,MAAiB,UAAV7B,EAAoB,QAAU,SAA1F,qEC9CQ,MAA0B,mCCwB1B8B,EAhBA,SAAAC,GAAK,OACnB,eAAC,IAAD,CAAOrC,GAAIqC,EAAMrC,GAAjB,UACC,cAAC,IAAD,CACCsC,KAAM,cAAC,IAAD,CAAiBC,QAASF,EAAMnC,GAAI,UAAQ,SADnD,oBAKA,qBAAKqB,UAAU,SAASiB,IAAKC,EAAQC,IAAI,uBCPvCC,EAAgB,IAAIC,UAAU,gCAoEnBC,EAnEH,WACX,MAAsCxC,mBAAS,QAA/C,mBAAOyC,EAAP,KAAoBC,EAApB,KACA,EAA+B1C,mBAAS,MAAxC,mBAAOF,EAAP,KAAoB6C,EAApB,KACA,EAA4B3C,mBAAS,cAAC,IAAD,CAAe0B,KAAK,WAAzD,mBAAOkB,EAAP,KAAeC,EAAf,KACA,EAA0B7C,mBAAS,GAAnC,mBAAOJ,EAAP,KAAckD,EAAd,KACA,EAAwB9C,mBAAS,MAAjC,mBAAOD,EAAP,KAAagD,EAAb,KAEAC,qBAAU,WAAM,4CAUf,4BAAAC,EAAA,sEACoB9C,IAAO+C,KAAK,uBADhC,OACOC,EADP,OAECR,EAAQQ,GAFT,4CAVe,sBAEfhD,IAAOC,WAAU,YAAgC,IAAD,IAA5BC,OAAUC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,KACnC,GAAa,yBAATD,EAAiC,CACpC,IAAME,EAAkBC,SAASC,gBAAgB,UACjDF,EAAgBG,MAAQJ,EAAKK,OAASL,EAAKK,OAAS,eACpDH,SAASI,KAAKC,WAAWC,aAAaP,OANzB,mCAcf4C,KACE,IAEH,IAAMvD,EAAK,SAAAwD,GACVX,EAAeW,EAAEC,cAAcC,QAAQC,KAzBvB,4CA4BhB,4BAAAP,EAAA,sEACmB9C,IAAO+C,KAAK,uBAD/B,OACMC,EADN,OAEAb,EAAaY,KAAKO,KAAKC,UAAU,CAACC,MAAO,eAAgBC,OAAQC,OAAOC,SAASC,OAAQZ,KAAMA,KAF/F,4CA5BgB,sBAuDjB,OAtBAb,EAAa0B,OAAS,SAASC,IAjCd,mCAkChBC,IAGD5B,EAAa6B,UAAY,SAASF,GAClC,IACA,IAAIG,EAAOX,KAAKY,MAAMJ,EAAQ1D,MAC9B,OAAQ6D,EAAKT,OACZ,IAAK,WACJb,GAAUlD,IAASwE,EAAKzD,OACxB,MACA,IAAK,OACLoC,EAAQqB,EAAKzD,OACb,MACA,IAAK,OACLkC,EAAU,OAGX,MAAMQ,GACPrC,QAAQC,IAAI,wCAAYoC,KAIvB,cAAC,IAAD,UACC,cAAC,IAAD,UACC,eAAC,IAAD,CAAMZ,YAAaA,EAAaG,OAAQA,EAAxC,UACC,cAAC,EAAD,CAAMjD,GAAG,OAAOG,YAAaA,EAAaD,GAAIA,EAAID,MAAOA,EAAOG,KAAMA,IACtE,cAAC,EAAD,CAAQJ,GAAG,SAASE,GAAIA,YC/D7BM,IAAO+C,KAAK,gBAEZoB,IAASC,OAAO,cAAC,EAAD,IAAS9D,SAAS+D,eAAe,U","file":"static/js/main.353cb828.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/mainbutton.a36c11c6.png\";","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Panel, PanelHeader, Header, Button, SubnavigationButton, Subhead, Title, SimpleCell, FixedLayout, SubnavigationBar, CardGrid, Card, Group, Cell, Div, Avatar } from '@vkontakte/vkui';\nimport ParticleEffectButton from 'react-particle-effect-button'\nimport './Persik.css';\nimport anime from 'animejs/lib/anime.es.js';\nimport mainbutton from '../img/mainbutton.png';\nimport bridge from '@vkontakte/vk-bridge';\nimport { Icon56DonateOutline,Icon56MoneyTransferOutline,Icon56ArticleOutline } from '@vkontakte/icons';\n\nconst Home = ({ id, go, fetchedUser, Score, Fact }) => {\n  const [Theme, setTheme] = useState(\"white\");\n\n  bridge.subscribe(({ detail: { type, data }}) => {\n    if (type === 'VKWebAppUpdateConfig') {\n      const schemeAttribute = document.createAttribute('scheme');\n      schemeAttribute.value = data.scheme ? data.scheme : 'bright_light';\n      setTheme(data.scheme !== \"bright_light\" ? 'black' : 'white')\n      document.body.attributes.setNamedItem(schemeAttribute);\n      console.log(data)\n    }\n  });\n\n  function declOfNum(number, titles) {\n    var cases = [2, 0, 1, 1, 1, 2];\n    return titles[ (number%100>4 && number%100<20)? 2 : cases[(number%10<5)?number%10:5] ];\n   }\n\n\n\treturn(\n\t<Panel id={id}>\n  <div className=\"rootPanel\">\n\t\t<PanelHeader >Главная</PanelHeader>\n\t\t<Group>\n    <center><div className=\"mainblock\">\n     <h1 className=\"score\" id=\"score\">{Score.toFixed(0)}</h1>\n     <Subhead weight=\"regular\" style={{marginTop: -80}}>{declOfNum(Score, ['секунда', 'секунды', 'секунд'])}</Subhead>\n    </div></center>\n    <Div>\n      <center>{Fact}</center>\n    </Div>\n\t\t</Group>\n    <FixedLayout vertical=\"bottom\" style={{marginBottom: 16}}>\n    <Div style={{display: 'flex'}}>\n       <Button size=\"s\" stretched mode=\"secondary\" style={{ marginRight: 8, color: Theme === 'black' ? 'white' : 'black'}}> Топ </Button>\n       <Button size=\"s\" stretched mode=\"secondary\" style={{ color: Theme === 'black' ? 'white' : 'black'}}> Перевод </Button>\n    </Div>\n    </FixedLayout>\n  </div>\n\t</Panel>\n )\n};\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Home;\n","export default __webpack_public_path__ + \"static/media/persik.ae9f0072.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Panel, PanelHeader, PanelHeaderBack } from '@vkontakte/vkui';\n\nimport persik from '../img/persik.png';\nimport './Persik.css';\n\nconst Persik = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader\n\t\t\tleft={<PanelHeaderBack onClick={props.go} data-to=\"home\"/>}\n\t\t>\n\t\t\tPersik\n\t\t</PanelHeader>\n\t\t<img className=\"Persik\" src={persik} alt=\"Persik The Cat\"/>\n\t</Panel>\n);\n\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Persik;\n","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport { View, ScreenSpinner, AdaptivityProvider, AppRoot } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport Persik from './panels/Persik';\n\nvar wsConnection  = new WebSocket(\"wss://freevkstickers.ru:9000\");\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\tconst [Score, setScore] = useState(0);\n\tconst [Fact, setFact] = useState(null);\n\n\tuseEffect(() => {\n\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\n\t\tasync function fetchData() {\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n  async function registration(){\n\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\twsConnection.send(JSON.stringify({event: 'registration', params: window.location.search, user: user}));\n\t}\n\n\twsConnection.onopen = function(message) {\n\t registration();\n\t};\n\n\twsConnection.onmessage = function(message) {\n\ttry{\n\tvar json = JSON.parse(message.data);\n\tswitch (json.event) {\n\t\tcase \"setscore\" :\n\t\t setScore(+Score + +json.value)\n\t\t break;\n\t\t case \"fact\" :\n\t\t setFact(json.value)\n\t\t break;\n\t\t case \"good\":\n\t\t setPopout(null)\n\t\t break;\n\t}\n\t}catch(e){\n\tconsole.log('Ошибка ' + e);\n\t}\n\t};\n\treturn (\n\t\t<AdaptivityProvider>\n\t\t\t<AppRoot>\n\t\t\t\t<View activePanel={activePanel} popout={popout}>\n\t\t\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go} Score={Score} Fact={Fact}/>\n\t\t\t\t\t<Persik id='persik' go={go} />\n\t\t\t\t</View>\n\t\t\t</AppRoot>\n\t\t</AdaptivityProvider>\n\t);\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}